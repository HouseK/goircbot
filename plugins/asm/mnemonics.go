package asm

var mnemonics = map[string]string{
	"AAA":         "ASCII Adjust After Addition",
	"AAD":         "ASCII Adjust AX Before Division",
	"AAM":         "ASCII Adjust AX After Multiply",
	"AAS":         "ASCII Adjust AL After Subtraction",
	"ADC":         "Add with Carry",
	"ADD":         "Add",
	"ADDPD":       "Add Packed Double-FP Values",
	"ADDPS":       "Add Packed Single-FP Values",
	"ADDSD":       "Add Scalar Double-FP Values",
	"ADDSS":       "Add Scalar Single-FP Values",
	"ADDSUBPD":    "Packed Double-FP Add/Subtract",
	"ADDSUBPS":    "Packed Single-FP Add/Subtract",
	"ADX":         "Adjust AX Before Division",
	"ALTER":       "Alternating branch prefix (only with Jcc instructions)",
	"AMX":         "Adjust AX After Multiply",
	"AND":         "Logical AND",
	"ANDNPD":      "Bitwise Logical AND NOT of Packed Double-FP Values",
	"ANDNPS":      "Bitwise Logical AND NOT of Packed Single-FP Values",
	"ANDPD":       "Bitwise Logical AND of Packed Double-FP Values",
	"ANDPS":       "Bitwise Logical AND of Packed Single-FP Values",
	"ARPL":        "Adjust RPL Field of Segment Selector",
	"BLENDPD":     "Blend Packed Double-FP Values",
	"BLENDPS":     "Blend Packed Single-FP Values",
	"BLENDVPD":    "Variable Blend Packed Double-FP Values",
	"BLENDVPS":    "Variable Blend Packed Single-FP Values",
	"BOUND":       "Check Array Index Against Bounds",
	"BSF":         "Bit Scan Forward",
	"BSR":         "Bit Scan Reverse",
	"BSWAP":       "Byte Swap",
	"BT":          "Bit Test",
	"BTC":         "Bit Test and Complement",
	"BTR":         "Bit Test and Reset",
	"BTS":         "Bit Test and Set",
	"CALL":        "Call Procedure",
	"CALLF":       "Call Procedure",
	"CBW":         "Convert",
	"CDQ":         "Convert",
	"CDQE":        "Convert",
	"CLC":         "Clear Carry Flag",
	"CLD":         "Clear Direction Flag",
	"CLFLUSH":     "Flush Cache Line",
	"CLI":         "Clear Interrupt Flag",
	"CLTS":        "Clear Task-Switched Flag in CR0",
	"CMC":         "Complement Carry Flag",
	"CMOVA":       "Conditional Move - not below or equal/above (CF=0 AND ZF=0)",
	"CMOVAE":      "Conditional Move - not below/above or equal/not carry (CF=0)",
	"CMOVB":       "Conditional Move - below/not above or equal/carry (CF=1)",
	"CMOVBE":      "Conditional Move - below or equal/not above (CF=1 AND ZF=1)",
	"CMOVC":       "Conditional Move - below/not above or equal/carry (CF=1)",
	"CMOVE":       "Conditional Move - zero/equal (ZF=0)",
	"CMOVG":       "Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))",
	"CMOVGE":      "Conditional Move - not less/greater or equal (SF=OF)",
	"CMOVL":       "Conditional Move - less/not greater (SF!=OF)",
	"CMOVLE":      "Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))",
	"CMOVNA":      "Conditional Move - below or equal/not above (CF=1 AND ZF=1)",
	"CMOVNAE":     "Conditional Move - below/not above or equal/carry (CF=1)",
	"CMOVNB":      "Conditional Move - not below/above or equal/not carry (CF=0)",
	"CMOVNBE":     "Conditional Move - not below or equal/above (CF=0 AND ZF=0)",
	"CMOVNC":      "Conditional Move - not below/above or equal/not carry (CF=0)",
	"CMOVNE":      "Conditional Move - not zero/not equal (ZF=1)",
	"CMOVNG":      "Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))",
	"CMOVNGE":     "Conditional Move - less/not greater (SF!=OF)",
	"CMOVNL":      "Conditional Move - not less/greater or equal (SF=OF)",
	"CMOVNLE":     "Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))",
	"CMOVNO":      "Conditional Move - not overflow (OF=0)",
	"CMOVNP":      "Conditional Move - not parity/parity odd",
	"CMOVNS":      "Conditional Move - not sign (SF=0)",
	"CMOVNZ":      "Conditional Move - not zero/not equal (ZF=1)",
	"CMOVO":       "Conditional Move - overflow (OF=1)",
	"CMOVP":       "Conditional Move - parity/parity even (PF=1)",
	"CMOVPE":      "Conditional Move - parity/parity even (PF=1)",
	"CMOVPO":      "Conditional Move - not parity/parity odd",
	"CMOVS":       "Conditional Move - sign (SF=1)",
	"CMOVZ":       "Conditional Move - zero/equal (ZF=0)",
	"CMP":         "Compare Two Operands",
	"CMPPD":       "Compare Packed Double-FP Values",
	"CMPPS":       "Compare Packed Single-FP Values",
	"CMPS":        "Compare String Operands",
	"CMPSB":       "Compare String Operands",
	"CMPSD":       "Compare Scalar Double-FP Values",
	"CMPSQ":       "Compare String Operands",
	"CMPSS":       "Compare Scalar Single-FP Values",
	"CMPSW":       "Compare String Operands",
	"CMPXCHG":     "Compare and Exchange",
	"CMPXCHG16B":  "Compare and Exchange Bytes",
	"CMPXCHG8B":   "Compare and Exchange Bytes",
	"COMISD":      "Compare Scalar Ordered Double-FP Values and Set EFLAGS",
	"COMISS":      "Compare Scalar Ordered Single-FP Values and Set EFLAGS",
	"CPUID":       "CPU Identification",
	"CQO":         "Convert",
	"CRC32":       "Accumulate CRC32 Value",
	"CS":          "CS segment override prefix",
	"CVTDQ2PD":    "Convert Packed DW Integers to Double-FP Values",
	"CVTDQ2PS":    "Convert Packed DW Integers to Single-FP Values",
	"CVTPD2DQ":    "Convert Packed Double-FP Values to DW Integers",
	"CVTPD2PI":    "Convert Packed Double-FP Values to DW Integers",
	"CVTPD2PS":    "Convert Packed Double-FP Values to Single-FP Values",
	"CVTPI2PD":    "Convert Packed DW Integers to Double-FP Values",
	"CVTPI2PS":    "Convert Packed DW Integers to Single-FP Values",
	"CVTPS2DQ":    "Convert Packed Single-FP Values to DW Integers",
	"CVTPS2PD":    "Convert Packed Single-FP Values to Double-FP Values",
	"CVTPS2PI":    "Convert Packed Single-FP Values to DW Integers",
	"CVTSD2SI":    "Convert Scalar Double-FP Value to DW Integer",
	"CVTSD2SS":    "Convert Scalar Double-FP Value to Scalar Single-FP Value",
	"CVTSI2SD":    "Convert DW Integer to Scalar Double-FP Value",
	"CVTSI2SS":    "Convert DW Integer to Scalar Single-FP Value",
	"CVTSS2SD":    "Convert Scalar Single-FP Value to Scalar Double-FP Value ",
	"CVTSS2SI":    "Convert Scalar Single-FP Value to DW Integer",
	"CVTTPD2DQ":   "Convert with Trunc. Packed Double-FP Values to DW Integers",
	"CVTTPD2PI":   "Convert with Trunc. Packed Double-FP Values to DW Integers",
	"CVTTPS2DQ":   "Convert with Trunc. Packed Single-FP Values to DW Integers",
	"CVTTPS2PI":   "Convert with Trunc. Packed Single-FP Values to DW Integers",
	"CVTTSD2SI":   "Conv. with Trunc. Scalar Double-FP Value to Signed DW Int",
	"CVTTSS2SI":   "Convert with Trunc. Scalar Single-FP Value to DW Integer",
	"CWD":         "Convert",
	"CWDE":        "Convert",
	"DAA":         "Decimal Adjust AL after Addition",
	"DAS":         "Decimal Adjust AL after Subtraction",
	"DEC":         "Decrement by 1",
	"DIV":         "Unsigned Divide",
	"DIVPD":       "Divide Packed Double-FP Values",
	"DIVPS":       "Divide Packed Single-FP Values",
	"DIVSD":       "Divide Scalar Double-FP Values",
	"DIVSS":       "Divide Scalar Single-FP Values",
	"DPPD":        "Dot Product of Packed Double-FP Values",
	"DPPS":        "Dot Product of Packed Single-FP Values",
	"DS":          "DS segment override prefix",
	"EMMS":        "Empty MMX Technology State",
	"ENTER":       "Make Stack Frame for Procedure Parameters",
	"ES":          "ES segment override prefix",
	"EXTRACTPS":   "Extract Packed Single-FP Value",
	"F2XM1":       "Compute 2-1",
	"FABS":        "Absolute Value",
	"FADD":        "Add",
	"FADDP":       "Add and Pop",
	"FBLD":        "Load Binary Coded Decimal",
	"FBSTP":       "Store BCD Integer and Pop",
	"FCHS":        "Change Sign",
	"FCLEX":       "Clear Exceptions",
	"FCMOVB":      "FP Conditional Move - below (CF=1)",
	"FCMOVBE":     "FP Conditional Move - below or equal (CF=1 or ZF=1)",
	"FCMOVE":      "FP Conditional Move - equal (ZF=1)",
	"FCMOVNB":     "FP Conditional Move - not below (CF=0)",
	"FCMOVNBE":    "FP Conditional Move - below or equal (CF=0 and ZF=0)",
	"FCMOVNE":     "FP Conditional Move - not equal (ZF=0)",
	"FCMOVNU":     "FP Conditional Move - not unordered (PF=0)",
	"FCMOVU":      "FP Conditional Move - unordered (PF=1)",
	"FCOM":        "Compare Real",
	"FCOM2":       "Compare Real",
	"FCOMI":       "Compare Floating Point Values and Set EFLAGS",
	"FCOMIP":      "Compare Floating Point Values and Set EFLAGS and Pop",
	"FCOMP":       "Compare Real and Pop",
	"FCOMP3":      "Compare Real and Pop",
	"FCOMP5":      "Compare Real and Pop",
	"FCOMPP":      "Compare Real and Pop Twice",
	"FCOS":        "Cosine",
	"FDECSTP":     "Decrement Stack-Top Pointer",
	"FDISI":       "Disable NPX Interrupt",
	"FDIV":        "Divide and Pop",
	"FDIVP":       "Divide and Pop",
	"FDIVR":       "Reverse Divide",
	"FDIVRP":      "Reverse Divide and Pop",
	"FENI":        "Enable NPX Interrupt",
	"FFREE":       "Free Floating-Point Register",
	"FFREEP":      "Free Floating-Point Register and Pop",
	"FIADD":       "Add",
	"FICOM":       "Compare Integer",
	"FICOMP":      "Compare Integer and Pop",
	"FIDIV":       "Divide",
	"FIDIVR":      "Reverse Divide",
	"FILD":        "Load Integer",
	"FIMUL":       "Multiply",
	"FINCSTP":     "Increment Stack-Top Pointer",
	"FINIT":       "Initialize Floating-Point Unit",
	"FIST":        "Store Integer",
	"FISTP":       "Store Integer and Pop",
	"FISTTP":      "Store Integer with Truncation and Pop",
	"FISUB":       "Subtract",
	"FISUBR":      "Reverse Subtract",
	"FLD":         "Load Floating Point Value",
	"FLD1":        "Load Constant +1.0",
	"FLDCW":       "Load x87 FPU Control Word",
	"FLDENV":      "Load x87 FPU Environment",
	"FLDL2E":      "Load Constant loge",
	"FLDL2T":      "Load Constant log10",
	"FLDLG2":      "Load Constant log2",
	"FLDLN2":      "Load Constant log2",
	"FLDPI":       "Load Constant Ï€",
	"FLDZ":        "Load Constant +0.0",
	"FMUL":        "Multiply",
	"FMULP":       "Multiply and Pop",
	"FNCLEX":      "Clear Exceptions",
	"FNDISI":      "Treated as Integer NOP",
	"FNENI":       "Treated as Integer NOP",
	"FNINIT":      "Initialize Floating-Point Unit",
	"FNOP":        "No Operation",
	"FNSAVE":      "Store x87 FPU State",
	"FNSETPM":     "Treated as Integer NOP",
	"FNSTCW":      "Store x87 FPU Control Word",
	"FNSTENV":     "Store x87 FPU Environment",
	"FNSTSW":      "Store x87 FPU Status Word",
	"FPATAN":      "Partial Arctangent and Pop",
	"FPREM":       "Partial Remainder (for compatibility with i8087 and i287)",
	"FPREM1":      "IEEE Partial Remainder",
	"FPTAN":       "Partial Tangent",
	"FRNDINT":     "Round to Integer",
	"FRSTOR":      "Restore x87 FPU State",
	"FS":          "FS segment override prefix",
	"FSAVE":       "Store x87 FPU State",
	"FSCALE":      "Scale",
	"FSETPM":      "Set Protected Mode",
	"FSIN":        "Sine",
	"FSINCOS":     "Sine and Cosine",
	"FSQRT":       "Square Root",
	"FST":         "Store Floating Point Value",
	"FSTCW":       "Store x87 FPU Control Word",
	"FSTENV":      "Store x87 FPU Environment",
	"FSTP":        "Store Floating Point Value and Pop",
	"FSTP1":       "Store Floating Point Value and Pop",
	"FSTP8":       "Store Floating Point Value and Pop",
	"FSTP9":       "Store Floating Point Value and Pop",
	"FSTSW":       "Store x87 FPU Status Word",
	"FSUB":        "Subtract",
	"FSUBP":       "Subtract and Pop",
	"FSUBR":       "Reverse Subtract",
	"FSUBRP":      "Reverse Subtract and Pop",
	"FTST":        "Test",
	"FUCOM":       "Unordered Compare Floating Point Values",
	"FUCOMI":      "Unordered Compare Floating Point Values and Set EFLAGS",
	"FUCOMIP":     "Unordered Compare Floating Point Values and Set EFLAGS and Pop",
	"FUCOMP":      "Unordered Compare Floating Point Values and Pop",
	"FUCOMPP":     "Unordered Compare Floating Point Values and Pop Twice",
	"FWAIT":       "Check pending unmasked floating-point exceptions",
	"FXAM":        "Examine",
	"FXCH":        "Exchange Register Contents",
	"FXCH4":       "Exchange Register Contents",
	"FXCH7":       "Exchange Register Contents",
	"FXRSTOR":     "Restore x87 FPU, MMX, XMM, and MXCSR State",
	"FXSAVE":      "Save x87 FPU, MMX, XMM, and MXCSR State",
	"FXTRACT":     "Extract Exponent and Significand",
	"FYL2X":       "Compute y Ã— logx and Pop",
	"FYL2XP1":     "Compute y Ã— log(x+1) and Pop",
	"GETSEC":      "GETSEC Leaf Functions",
	"GS":          "GS segment override prefix",
	"HADDPD":      "Packed Double-FP Horizontal Add",
	"HADDPS":      "Packed Single-FP Horizontal Add",
	"HINT_NOP":    "Hintable NOP",
	"HLT":         "Halt",
	"HSUBPD":      "Packed Double-FP Horizontal Subtract",
	"HSUBPS":      "Packed Single-FP Horizontal Subtract",
	"ICEBP":       "Call to Interrupt Procedure",
	"IDIV":        "Signed Divide",
	"IMUL":        "Signed Multiply",
	"IN":          "Input from Port",
	"INC":         "Increment by 1",
	"INS":         "Input from Port to String",
	"INSB":        "Input from Port to String",
	"INSD":        "Input from Port to String",
	"INSERTPS":    "Insert Packed Single-FP Value",
	"INSW":        "Input from Port to String",
	"INT":         "Call to Interrupt Procedure",
	"INT1":        "Call to Interrupt Procedure",
	"INTO":        "Call to Interrupt Procedure",
	"INVD":        "Invalidate Internal Caches",
	"INVEPT":      "Invalidate Translations Derived from EPT",
	"INVLPG":      "Invalidate TLB Entry",
	"INVVPID":     "Invalidate Translations Based on VPID",
	"IRET":        "Interrupt Return",
	"IRETD":       "Interrupt Return",
	"IRETQ":       "Interrupt Return",
	"JA":          "Jump short if not below or equal/above (CF=0 AND ZF=0)",
	"JAE":         "Jump short if not below/above or equal/not carry (CF=0)",
	"JB":          "Jump short if below/not above or equal/carry (CF=1)",
	"JBE":         "Jump short if below or equal/not above (CF=1 AND ZF=1)",
	"JC":          "Jump short if below/not above or equal/carry (CF=1)",
	"JCXZ":        "Jump short if eCX register is 0",
	"JE":          "Jump short if zero/equal (ZF=0)",
	"JECXZ":       "Jump short if rCX register is 0",
	"JG":          "Jump short if not less nor equal/greater ((ZF=0) AND (SF=OF))",
	"JGE":         "Jump short if not less/greater or equal (SF=OF)",
	"JL":          "Jump short if less/not greater (SF!=OF)",
	"JLE":         "Jump short if less or equal/not greater ((ZF=1) OR (SF!=OF))",
	"JMP":         "Jump",
	"JMPE":        "Jump to IA-64 Instruction Set",
	"JMPF":        "Jump",
	"JNA":         "Jump short if below or equal/not above (CF=1 AND ZF=1)",
	"JNAE":        "Jump short if below/not above or equal/carry (CF=1)",
	"JNB":         "Jump short if not below/above or equal/not carry (CF=0)",
	"JNBE":        "Jump short if not below or equal/above (CF=0 AND ZF=0)",
	"JNC":         "Jump short if not below/above or equal/not carry (CF=0)",
	"JNE":         "Jump short if not zero/not equal (ZF=1)",
	"JNG":         "Jump short if less or equal/not greater ((ZF=1) OR (SF!=OF))",
	"JNGE":        "Jump short if less/not greater (SF!=OF)",
	"JNL":         "Jump short if not less/greater or equal (SF=OF)",
	"JNLE":        "Jump short if not less nor equal/greater ((ZF=0) AND (SF=OF))",
	"JNO":         "Jump short if not overflow (OF=0)",
	"JNP":         "Jump short if not parity/parity odd",
	"JNS":         "Jump short if not sign (SF=0)",
	"JNZ":         "Jump short if not zero/not equal (ZF=1)",
	"JO":          "Jump short if overflow (OF=1)",
	"JP":          "Jump short if parity/parity even (PF=1)",
	"JPE":         "Jump short if parity/parity even (PF=1)",
	"JPO":         "Jump short if not parity/parity odd",
	"JRCXZ":       "Jump short if rCX register is 0",
	"JS":          "Jump short if sign (SF=1)",
	"JZ":          "Jump short if zero/equal (ZF=0)",
	"LAHF":        "Load Status Flags into AH Register",
	"LAR":         "Load Access Rights Byte",
	"LDDQU":       "Load Unaligned Integer 128 Bits",
	"LDMXCSR":     "Load MXCSR Register",
	"LDS":         "Load Far Pointer",
	"LEA":         "Load Effective Address",
	"LEAVE":       "High Level Procedure Exit",
	"LES":         "Load Far Pointer",
	"LFENCE":      "Load Fence",
	"LFS":         "Load Far Pointer",
	"LGDT":        "Load Global Descriptor Table Register",
	"LGS":         "Load Far Pointer",
	"LIDT":        "Load Interrupt Descriptor Table Register",
	"LLDT":        "Load Local Descriptor Table Register",
	"LMSW":        "Load Machine Status Word",
	"LOADALL":     "Load All of the CPU Registers",
	"LOCK":        "Assert LOCK# Signal Prefix",
	"LODS":        "Load String",
	"LODSB":       "Load String",
	"LODSD":       "Load String",
	"LODSQ":       "Load String",
	"LODSW":       "Load String",
	"LOOP":        "Decrement count; Jump short if count!=0",
	"LOOPE":       "Decrement count; Jump short if count!=0 and ZF=1",
	"LOOPNE":      "Decrement count; Jump short if count!=0 and ZF=0",
	"LOOPNZ":      "Decrement count; Jump short if count!=0 and ZF=0",
	"LOOPZ":       "Decrement count; Jump short if count!=0 and ZF=1",
	"LSL":         "Load Segment Limit",
	"LSS":         "Load Far Pointer",
	"LTR":         "Load Task Register",
	"MASKMOVDQU":  "Store Selected Bytes of Double Quadword",
	"MASKMOVQ":    "Store Selected Bytes of Quadword",
	"MAXPD":       "Return Maximum Packed Double-FP Values",
	"MAXPS":       "Return Maximum Packed Single-FP Values",
	"MAXSD":       "Return Maximum Scalar Double-FP Value",
	"MAXSS":       "Return Maximum Scalar Single-FP Value",
	"MFENCE":      "Memory Fence",
	"MINPD":       "Return Minimum Packed Double-FP Values",
	"MINPS":       "Return Minimum Packed Single-FP Values",
	"MINSD":       "Return Minimum Scalar Double-FP Value",
	"MINSS":       "Return Minimum Scalar Single-FP Value",
	"MONITOR":     "Set Up Monitor Address",
	"MOV":         "Move to/from Test Registers",
	"MOVAPD":      "Move Aligned Packed Double-FP Values",
	"MOVAPS":      "Move Aligned Packed Single-FP Values",
	"MOVBE":       "Move Data After Swapping Bytes",
	"MOVD":        "Move Doubleword/Quadword",
	"MOVDDUP":     "Move One Double-FP and Duplicate",
	"MOVDQ2Q":     "Move Quadword from XMM to MMX Technology Register",
	"MOVDQA":      "Move Aligned Double Quadword",
	"MOVDQU":      "Move Unaligned Double Quadword",
	"MOVHLPS":     "Move Packed Single-FP Values High to Low",
	"MOVHPD":      "Move High Packed Double-FP Value",
	"MOVHPS":      "Move High Packed Single-FP Values",
	"MOVLHPS":     "Move Packed Single-FP Values Low to High",
	"MOVLPD":      "Move Low Packed Double-FP Value",
	"MOVLPS":      "Move Low Packed Single-FP Values",
	"MOVMSKPD":    "Extract Packed Double-FP Sign Mask",
	"MOVMSKPS":    "Extract Packed Single-FP Sign Mask",
	"MOVNTDQ":     "Store Double Quadword Using Non-Temporal Hint",
	"MOVNTDQA":    "Load Double Quadword Non-Temporal Aligned Hint",
	"MOVNTI":      "Store Doubleword Using Non-Temporal Hint",
	"MOVNTPD":     "Store Packed Double-FP Values Using Non-Temporal Hint",
	"MOVNTPS":     "Store Packed Single-FP Values Using Non-Temporal Hint",
	"MOVNTQ":      "Store of Quadword Using Non-Temporal Hint",
	"MOVQ":        "Move Quadword",
	"MOVQ2DQ":     "Move Quadword from MMX Technology to XMM Register",
	"MOVS":        "Move Data from String to String",
	"MOVSB":       "Move Data from String to String",
	"MOVSD":       "Move Scalar Double-FP Value",
	"MOVSHDUP":    "Move Packed Single-FP High and Duplicate",
	"MOVSLDUP":    "Move Packed Single-FP Low and Duplicate",
	"MOVSQ":       "Move Data from String to String",
	"MOVSS":       "Move Scalar Single-FP Values",
	"MOVSW":       "Move Data from String to String",
	"MOVSX":       "Move with Sign-Extension",
	"MOVSXD":      "Move with Sign-Extension",
	"MOVUPD":      "Move Unaligned Packed Double-FP Values",
	"MOVUPS":      "Move Unaligned Packed Single-FP Values",
	"MOVZX":       "Move with Zero-Extend",
	"MPSADBW":     "Compute Multiple Packed Sums of Absolute Difference",
	"MUL":         "Unsigned Multiply",
	"MULPD":       "Multiply Packed Double-FP Values",
	"MULPS":       "Multiply Packed Single-FP Values",
	"MULSD":       "Multiply Scalar Double-FP Values",
	"MULSS":       "Multiply Scalar Single-FP Value",
	"MWAIT":       "Monitor Wait",
	"NEG":         "Two's Complement Negation",
	"NOP":         "No Operation",
	"NOT":         "One's Complement Negation",
	"NTAKEN":      "Branch not taken prefix (only with Jcc instructions)",
	"OR":          "Logical Inclusive OR",
	"ORPD":        "Bitwise Logical OR of Double-FP Values",
	"ORPS":        "Bitwise Logical OR of Single-FP Values",
	"OUT":         "Output to Port",
	"OUTS":        "Output String to Port",
	"OUTSB":       "Output String to Port",
	"OUTSD":       "Output String to Port",
	"OUTSW":       "Output String to Port",
	"PABSB":       "Packed Absolute Value",
	"PABSD":       "Packed Absolute Value",
	"PABSW":       "Packed Absolute Value",
	"PACKSSDW":    "Pack with Signed Saturation",
	"PACKSSWB":    "Pack with Signed Saturation",
	"PACKUSDW":    "Pack with Unsigned Saturation",
	"PACKUSWB":    "Pack with Unsigned Saturation",
	"PADDB":       "Add Packed Integers",
	"PADDD":       "Add Packed Integers",
	"PADDQ":       "Add Packed Quadword Integers",
	"PADDSB":      "Add Packed Signed Integers with Signed Saturation",
	"PADDSW":      "Add Packed Signed Integers with Signed Saturation",
	"PADDUSB":     "Add Packed Unsigned Integers with Unsigned Saturation",
	"PADDUSW":     "Add Packed Unsigned Integers with Unsigned Saturation",
	"PADDW":       "Add Packed Integers",
	"PALIGNR":     "Packed Align Right",
	"PAND":        "Logical AND",
	"PANDN":       "Logical AND NOT",
	"PAUSE":       "Spin Loop Hint",
	"PAVGB":       "Average Packed Integers",
	"PAVGW":       "Average Packed Integers",
	"PBLENDVB":    "Variable Blend Packed Bytes",
	"PBLENDW":     "Blend Packed Words",
	"PCMPEQB":     "Compare Packed Data for Equal",
	"PCMPEQD":     "Compare Packed Data for Equal",
	"PCMPEQQ":     "Compare Packed Qword Data for Equal",
	"PCMPEQW":     "Compare Packed Data for Equal",
	"PCMPESTRI":   "Packed Compare Explicit Length Strings, Return Index",
	"PCMPESTRM":   "Packed Compare Explicit Length Strings, Return Mask",
	"PCMPGTB":     "Compare Packed Signed Integers for Greater Than",
	"PCMPGTD":     "Compare Packed Signed Integers for Greater Than",
	"PCMPGTQ":     "Compare Packed Qword Data for Greater Than",
	"PCMPGTW":     "Compare Packed Signed Integers for Greater Than",
	"PCMPISTRI":   "Packed Compare Implicit Length Strings, Return Index",
	"PCMPISTRM":   "Packed Compare Implicit Length Strings, Return Mask",
	"PEXTRB":      "Extract Byte",
	"PEXTRD":      "Extract Dword/Qword",
	"PEXTRQ":      "Extract Dword/Qword",
	"PEXTRW":      "Extract Word",
	"PHADDD":      "Packed Horizontal Add",
	"PHADDSW":     "Packed Horizontal Add and Saturate",
	"PHADDW":      "Packed Horizontal Add",
	"PHMINPOSUW":  "Packed Horizontal Word Minimum",
	"PHSUBD":      "Packed Horizontal Subtract",
	"PHSUBSW":     "Packed Horizontal Subtract and Saturate",
	"PHSUBW":      "Packed Horizontal Subtract",
	"PINSRB":      "Insert Byte",
	"PINSRD":      "Insert Dword/Qword",
	"PINSRQ":      "Insert Dword/Qword",
	"PINSRW":      "Insert Word",
	"PMADDUBSW":   "Multiply and Add Packed Signed and Unsigned Bytes",
	"PMADDWD":     "Multiply and Add Packed Integers",
	"PMAXSB":      "Maximum of Packed Signed Byte Integers",
	"PMAXSD":      "Maximum of Packed Signed Dword Integers",
	"PMAXSW":      "Maximum of Packed Signed Word Integers",
	"PMAXUB":      "Maximum of Packed Unsigned Byte Integers",
	"PMAXUD":      "Maximum of Packed Unsigned Dword Integers",
	"PMAXUW":      "Maximum of Packed Unsigned Word Integers",
	"PMINSB":      "Minimum of Packed Signed Byte Integers",
	"PMINSD":      "Minimum of Packed Signed Dword Integers",
	"PMINSW":      "Minimum of Packed Signed Word Integers",
	"PMINUB":      "Minimum of Packed Unsigned Byte Integers",
	"PMINUD":      "Minimum of Packed Unsigned Dword Integers",
	"PMINUW":      "Minimum of Packed Unsigned Word Integers",
	"PMOVMSKB":    "Move Byte Mask",
	"PMOVSXBD":    "Packed Move with Sign Extend",
	"PMOVSXBQ":    "Packed Move with Sign Extend",
	"PMOVSXBW":    "Packed Move with Sign Extend",
	"PMOVSXDQ":    "Packed Move with Sign Extend",
	"PMOVSXWD":    "Packed Move with Sign Extend",
	"PMOVSXWQ":    "Packed Move with Sign Extend",
	"PMOVZXBD":    "Packed Move with Zero Extend",
	"PMOVZXBQ":    "Packed Move with Zero Extend",
	"PMOVZXBW":    "Packed Move with Zero Extend",
	"PMOVZXDQ":    "Packed Move with Zero Extend",
	"PMOVZXWD":    "Packed Move with Zero Extend",
	"PMOVZXWQ":    "Packed Move with Zero Extend",
	"PMULDQ":      "Multiply Packed Signed Dword Integers",
	"PMULHRSW":    "Packed Multiply High with Round and Scale",
	"PMULHUW":     "Multiply Packed Unsigned Integers and Store High Result",
	"PMULHW":      "Multiply Packed Signed Integers and Store High Result",
	"PMULLD":      "Multiply Packed Signed Dword Integers and Store Low Result",
	"PMULLW":      "Multiply Packed Signed Integers and Store Low Result",
	"PMULUDQ":     "Multiply Packed Unsigned DW Integers",
	"POP":         "Pop a Value from the Stack",
	"POPA":        "Pop All General-Purpose Registers",
	"POPAD":       "Pop All General-Purpose Registers",
	"POPCNT":      "Bit Population Count",
	"POPF":        "Pop Stack into rFLAGS Register",
	"POPFD":       "Pop Stack into eFLAGS Register",
	"POPFQ":       "Pop Stack into rFLAGS Register",
	"POR":         "Bitwise Logical OR",
	"PREFETCHNTA": "Prefetch Data Into Caches",
	"PREFETCHT0":  "Prefetch Data Into Caches",
	"PREFETCHT1":  "Prefetch Data Into Caches",
	"PREFETCHT2":  "Prefetch Data Into Caches",
	"PSADBW":      "Compute Sum of Absolute Differences",
	"PSHUFB":      "Packed Shuffle Bytes",
	"PSHUFD":      "Shuffle Packed Doublewords",
	"PSHUFHW":     "Shuffle Packed High Words",
	"PSHUFLW":     "Shuffle Packed Low Words",
	"PSHUFW":      "Shuffle Packed Words",
	"PSIGNB":      "Packed SIGN",
	"PSIGND":      "Packed SIGN",
	"PSIGNW":      "Packed SIGN",
	"PSLLD":       "Shift Packed Data Left Logical",
	"PSLLDQ":      "Shift Double Quadword Left Logical",
	"PSLLQ":       "Shift Packed Data Left Logical",
	"PSLLW":       "Shift Packed Data Left Logical",
	"PSRAD":       "Shift Packed Data Right Arithmetic",
	"PSRAW":       "Shift Packed Data Right Arithmetic",
	"PSRLD":       "Shift Packed Data Right Logical",
	"PSRLDQ":      "Shift Double Quadword Right Logical",
	"PSRLQ":       "Shift Packed Data Right Logical",
	"PSRLW":       "Shift Packed Data Right Logical",
	"PSUBB":       "Subtract Packed Integers",
	"PSUBD":       "Subtract Packed Integers",
	"PSUBQ":       "Subtract Packed Quadword Integers",
	"PSUBSB":      "Subtract Packed Signed Integers with Signed Saturation",
	"PSUBSW":      "Subtract Packed Signed Integers with Signed Saturation",
	"PSUBUSB":     "Subtract Packed Unsigned Integers with Unsigned Saturation",
	"PSUBUSW":     "Subtract Packed Unsigned Integers with Unsigned Saturation",
	"PSUBW":       "Subtract Packed Integers",
	"PTEST":       "Logical Compare",
	"PUNPCKHBW":   "Unpack High Data",
	"PUNPCKHDQ":   "Unpack High Data",
	"PUNPCKHQDQ":  "Unpack High Data",
	"PUNPCKHWD":   "Unpack High Data",
	"PUNPCKLBW":   "Unpack Low Data",
	"PUNPCKLDQ":   "Unpack Low Data",
	"PUNPCKLQDQ":  "Unpack Low Data",
	"PUNPCKLWD":   "Unpack Low Data",
	"PUSH":        "Push Word, Doubleword or Quadword Onto the Stack",
	"PUSHA":       "Push All General-Purpose Registers",
	"PUSHAD":      "Push All General-Purpose Registers",
	"PUSHF":       "Push rFLAGS Register onto the Stack",
	"PUSHFD":      "Push eFLAGS Register onto the Stack",
	"PUSHFQ":      "Push rFLAGS Register onto the Stack",
	"PXOR":        "Logical Exclusive OR",
	"RCL":         "Rotate",
	"RCPPS":       "Compute Reciprocals of Packed Single-FP Values",
	"RCPSS":       "Compute Reciprocal of Scalar Single-FP Values",
	"RCR":         "Rotate",
	"RDMSR":       "Read from Model Specific Register",
	"RDPMC":       "Read Performance-Monitoring Counters",
	"RDTSC":       "Read Time-Stamp Counter",
	"RDTSCP":      "Read Time-Stamp Counter and Processor ID",
	"REP":         "Repeat String Operation Prefix",
	"REPE":        "Repeat String Operation Prefix",
	"REPNE":       "Repeat String Operation Prefix",
	"REPNZ":       "Repeat String Operation Prefix",
	"REPZ":        "Repeat String Operation Prefix",
	"RETF":        "Return from procedure",
	"RETN":        "Return from procedure",
	"REX":         "Access to new 8-bit registers",
	"REX.B":       "Extension of r/m field, base field, or opcode reg field",
	"REX.R":       "Extension of ModR/M reg field",
	"REX.RB":      "REX.R and REX.B combination",
	"REX.RX":      "REX.R and REX.X combination",
	"REX.RXB":     "REX.R, REX.X and REX.B combination",
	"REX.W":       "64 Bit Operand Size",
	"REX.WB":      "REX.W and REX.B combination",
	"REX.WR":      "REX.W and REX.R combination",
	"REX.WRB":     "REX.W, REX.R and REX.B combination",
	"REX.WRX":     "REX.W, REX.R and REX.X combination",
	"REX.WRXB":    "REX.W, REX.R, REX.X and REX.B combination",
	"REX.WX":      "REX.W and REX.X combination",
	"REX.WXB":     "REX.W, REX.X and REX.B combination",
	"REX.X":       "Extension of SIB index field",
	"REX.XB":      "REX.X and REX.B combination",
	"ROL":         "Rotate",
	"ROR":         "Rotate",
	"ROUNDPD":     "Round Packed Double-FP Values",
	"ROUNDPS":     "Round Packed Single-FP Values",
	"ROUNDSD":     "Round Scalar Double-FP Values",
	"ROUNDSS":     "Round Scalar Single-FP Values",
	"RSM":         "Resume from System Management Mode",
	"RSQRTPS":     "Compute Recipr. of Square Roots of Packed Single-FP Values",
	"RSQRTSS":     "Compute Recipr. of Square Root of Scalar Single-FP Value",
	"SAHF":        "Store AH into Flags",
	"SAL":         "Shift",
	"SALC":        "Set AL If Carry",
	"SAR":         "Shift",
	"SBB":         "Integer Subtraction with Borrow",
	"SCAS":        "Scan String",
	"SCASB":       "Scan String",
	"SCASD":       "Scan String",
	"SCASQ":       "Scan String",
	"SCASW":       "Scan String",
	"SETA":        "Set Byte on Condition - not below or equal/above (CF=0 AND ZF=0)",
	"SETAE":       "Set Byte on Condition - not below/above or equal/not carry (CF=0)",
	"SETALC":      "Set AL If Carry",
	"SETB":        "Set Byte on Condition - below/not above or equal/carry (CF=1)",
	"SETBE":       "Set Byte on Condition - below or equal/not above (CF=1 AND ZF=1)",
	"SETC":        "Set Byte on Condition - below/not above or equal/carry (CF=1)",
	"SETE":        "Set Byte on Condition - zero/equal (ZF=0)",
	"SETG":        "Set Byte on Condition - not less nor equal/greater ((ZF=0) AND (SF=OF))",
	"SETGE":       "Set Byte on Condition - not less/greater or equal (SF=OF)",
	"SETL":        "Set Byte on Condition - less/not greater (SF!=OF)",
	"SETLE":       "Set Byte on Condition - less or equal/not greater ((ZF=1) OR (SF!=OF))",
	"SETNA":       "Set Byte on Condition - below or equal/not above (CF=1 AND ZF=1)",
	"SETNAE":      "Set Byte on Condition - below/not above or equal/carry (CF=1)",
	"SETNB":       "Set Byte on Condition - not below/above or equal/not carry (CF=0)",
	"SETNBE":      "Set Byte on Condition - not below or equal/above (CF=0 AND ZF=0)",
	"SETNC":       "Set Byte on Condition - not below/above or equal/not carry (CF=0)",
	"SETNE":       "Set Byte on Condition - not zero/not equal (ZF=1)",
	"SETNG":       "Set Byte on Condition - less or equal/not greater ((ZF=1) OR (SF!=OF))",
	"SETNGE":      "Set Byte on Condition - less/not greater (SF!=OF)",
	"SETNL":       "Set Byte on Condition - not less/greater or equal (SF=OF)",
	"SETNLE":      "Set Byte on Condition - not less nor equal/greater ((ZF=0) AND (SF=OF))",
	"SETNO":       "Set Byte on Condition - not overflow (OF=0)",
	"SETNP":       "Set Byte on Condition - not parity/parity odd",
	"SETNS":       "Set Byte on Condition - not sign (SF=0)",
	"SETNZ":       "Set Byte on Condition - not zero/not equal (ZF=1)",
	"SETO":        "Set Byte on Condition - overflow (OF=1)",
	"SETP":        "Set Byte on Condition - parity/parity even (PF=1)",
	"SETPE":       "Set Byte on Condition - parity/parity even (PF=1)",
	"SETPO":       "Set Byte on Condition - not parity/parity odd",
	"SETS":        "Set Byte on Condition - sign (SF=1)",
	"SETZ":        "Set Byte on Condition - zero/equal (ZF=0)",
	"SFENCE":      "Store Fence",
	"SGDT":        "Store Global Descriptor Table Register",
	"SHL":         "Shift",
	"SHLD":        "Double Precision Shift Left",
	"SHR":         "Shift",
	"SHRD":        "Double Precision Shift Right",
	"SHUFPD":      "Shuffle Packed Double-FP Values",
	"SHUFPS":      "Shuffle Packed Single-FP Values",
	"SIDT":        "Store Interrupt Descriptor Table Register",
	"SLDT":        "Store Local Descriptor Table Register",
	"SMSW":        "Store Machine Status Word",
	"SQRTPD":      "Compute Square Roots of Packed Double-FP Values",
	"SQRTPS":      "Compute Square Roots of Packed Single-FP Values",
	"SQRTSD":      "Compute Square Root of Scalar Double-FP Value",
	"SQRTSS":      "Compute Square Root of Scalar Single-FP Value",
	"SS":          "SS segment override prefix",
	"STC":         "Set Carry Flag",
	"STD":         "Set Direction Flag",
	"STI":         "Set Interrupt Flag",
	"STMXCSR":     "Store MXCSR Register State",
	"STOS":        "Store String",
	"STOSB":       "Store String",
	"STOSD":       "Store String",
	"STOSQ":       "Store String",
	"STOSW":       "Store String",
	"STR":         "Store Task Register",
	"SUB":         "Subtract",
	"SUBPD":       "Subtract Packed Double-FP Values",
	"SUBPS":       "Subtract Packed Single-FP Values",
	"SUBSD":       "Subtract Scalar Double-FP Values",
	"SUBSS":       "Subtract Scalar Single-FP Values",
	"SWAPGS":      "Swap GS Base Register",
	"SYSCALL":     "Fast System Call",
	"SYSENTER":    "Fast System Call",
	"SYSEXIT":     "Fast Return from Fast System Call",
	"SYSRET":      "Return From Fast System Call",
	"TAKEN":       "Branch taken prefix (only with Jcc instructions)",
	"TEST":        "Logical Compare",
	"UCOMISD":     "Unordered Compare Scalar Double-FP Values and Set EFLAGS",
	"UCOMISS":     "Unordered Compare Scalar Single-FP Values and Set EFLAGS",
	"UD":          "Undefined Instruction",
	"UD2":         "Undefined Instruction",
	"UNPCKHPD":    "Unpack and Interleave High Packed Double-FP Values",
	"UNPCKHPS":    "Unpack and Interleave High Packed Single-FP Values",
	"UNPCKLPD":    "Unpack and Interleave Low Packed Double-FP Values",
	"UNPCKLPS":    "Unpack and Interleave Low Packed Single-FP Values",
	"VERR":        "Verify a Segment for Reading",
	"VERW":        "Verify a Segment for Writing",
	"VMCALL":      "Call to VM Monitor",
	"VMCLEAR":     "Clear Virtual-Machine Control Structure",
	"VMLAUNCH":    "Launch Virtual Machine",
	"VMPTRLD":     "Load Pointer to Virtual-Machine Control Structure",
	"VMPTRST":     "Store Pointer to Virtual-Machine Control Structure",
	"VMREAD":      "Read Field from Virtual-Machine Control Structure",
	"VMRESUME":    "Resume Virtual Machine",
	"VMWRITE":     "Write Field to Virtual-Machine Control Structure",
	"VMXOFF":      "Leave VMX Operation",
	"VMXON":       "Enter VMX Operation",
	"WAIT":        "Check pending unmasked floating-point exceptions",
	"WBINVD":      "Write Back and Invalidate Cache",
	"WRMSR":       "Write to Model Specific Register",
	"XADD":        "Exchange and Add",
	"XCHG":        "Exchange Register/Memory with Register",
	"XGETBV":      "Get Value of Extended Control Register",
	"XLAT":        "Table Look-up Translation",
	"XLATB":       "Table Look-up Translation",
	"XOR":         "Logical Exclusive OR",
	"XORPD":       "Bitwise Logical XOR for Double-FP Values",
	"XORPS":       "Bitwise Logical XOR for Single-FP Values",
	"XRSTOR":      "Restore Processor Extended States",
	"XSAVE":       "Save Processor Extended States",
	"XSETBV":      "Set Extended Control Register",
}
